возможные дополнения кода 

from django.db import models
from datetime import timedelta


class Ingredient(models.Model):
    name = models.CharField(max_length=50, verbose_name='Название ингредиента')
    unit = models.CharField(max_length=15, choices=Post_recipe.UNIT_OF_MEASUREMENT, verbose_name='Единицы измерения')

    def __str__(self):
        return self.name


class PostRecipe(models.Model):
    UNIT_OF_MEASUREMENT = (
        ('Grams', 'г'),
        ('Milliliters', 'мл'),
        ('Pieces', 'шт'),
        ('Teaspoons', 'ч.л.'),
        ('Tablespoons', 'ст.л.'),
        ('Cups', 'чашки'),
        ('Ounces', 'унц.'),
        ('Pounds', 'фунты'),
        ('Slices', 'ломтики'),
        ('Sprigs', 'веточки'),
        ('Bunches', 'пучки'),
        ('Pinches', 'щепотки'),
        ('Stalks', 'стебли'),
    )

    DISH_LVL = (
        ('very_simple', 'Очень просто'),
        ('simple', 'Просто'),
        ('medium', 'Средней сложности'),
        ('hard', 'Сложно'),
        ('very_hard', 'Очень сложно'),
    )

    name = models.CharField(primary_key=True, unique=True, max_length=30, blank=False, verbose_name='Название рецепта')
    ingredients = models.ManyToManyField(Ingredient, verbose_name='Ингредиенты')
    level = models.CharField(max_length=20, choices=DISH_LVL, blank=False, verbose_name='Уровень сложности')
    steps = models.TextField(verbose_name='Шаги приготовления', blank=False)
    cooking_time = models.DurationField(verbose_name='Время приготовления блюда', default=timedelta(minutes=30))
    dish_photo = models.ImageField(verbose_name='Фото блюда', blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')
    updated_at = models.DateTimeField(auto_now=True, verbose_name='Дата обновления')
    tags = models.CharField(max_length=100, blank=True, verbose_name='Теги')

    def __str__(self):
        return self.name


class Review(models.Model):
    recipe = models.ForeignKey(PostRecipe, on_delete=models.CASCADE, related_name='reviews', verbose_name='Рецепт')
    rating = models.PositiveIntegerField(verbose_name='Рейтинг', choices=[(i, str(i)) for i in range(1, 6)])
    comment = models.TextField(verbose_name='Комментарий', blank=True)
    created_at = models.DateTimeField(auto_now_add=True, verbose_name='Дата отзыва')

    def __str__(self):
        return f'Отзыв для {self.recipe.name} от {self.rating} звезд'
